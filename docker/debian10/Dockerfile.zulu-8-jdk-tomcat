
# This Zulu OpenJDK Dockerfile and corresponding Docker image are
# to be used solely with Java applications or Java application components
# that are being developed for deployment on Microsoft Azure or Azure Stack,
# and are not intended to be used for any other purpose.

FROM mcr.microsoft.com/java/jdk:8-zulu-debian10
MAINTAINER Zulu Enterprise Container Images <azul-zulu-images@microsoft.com>

ARG TOMCAT_VERSION=9.0.37
ARG SERVER_XML=server.xml
ARG LOGGING_PROPERTIES=logging.properties
ARG CATALINA_PROPERTIES=catalina.properties
ARG TOMCAT_MAJOR=9
ENV LOG_ROOT=/tomcat_logs

ENV PATH /usr/local/tomcat/bin:$PATH

# Make Java 8 obey container resource limits, improve performance
ENV JAVA_OPTS "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:+UseG1GC -Djava.awt.headless=true"

# Cleanup & Install
RUN apt-get -qq update && \
    apt-get -qq -y --no-install-recommends install curl unzip && \
    rm -rf /var/lib/apt/lists/* && \
# Install Tomcat
    curl -O https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v${TOMCAT_VERSION}/bin/apache-tomcat-${TOMCAT_VERSION}.tar.gz --no-verbose && \
    mkdir /usr/local/tomcat && \ 
    tar xvzf apache-tomcat-${TOMCAT_VERSION}.tar.gz -C /usr/local/tomcat --strip-components 1 && \
    rm -f apache-tomcat-${TOMCAT_VERSION}.tar.gz
       
COPY Tomcat/${SERVER_XML} /usr/local/tomcat/conf/server.xml
COPY Tomcat/${LOGGING_PROPERTIES} /usr/local/tomcat/conf/logging.properties
COPY Tomcat/${CATALINA_PROPERTIES} /usr/local/tomcat/conf/catalina.properties

# Copy the startup script
COPY Tomcat/startup.sh /startup.sh
RUN chmod a+x /startup.sh

EXPOSE 8080

CMD ["/startup.sh"]
